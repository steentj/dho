services:
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/rate_limit.conf:/etc/nginx/conf.d/rate_limit.conf
      - /etc/letsencrypt/live/ubuntu.slaegtsbibliotek.dk/fullchain.pem:/etc/ssl/fullchain.pem:ro
      - /etc/letsencrypt/live/ubuntu.slaegtsbibliotek.dk/privkey.pem:/etc/ssl/privkey.pem:ro
    ports:
      - "443:443"
      - "8080:80"
    depends_on:
      - searchapi
    networks:
      - dho-network
    restart: always 

  searchapi:
    image: dhosearchapi:0.2
    container_name: dhosearch
    env_file:
      - .env
    depends_on:
      - postgres
    expose:
      - "8000"
    networks:
      - dho-network
    restart: always
      
  postgres:
    image: pgvector/pgvector:pg16
    container_name: dhodb
    env_file:
      - .env
    volumes:
      - ${HOME}/dhoDbData:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - dho-network
    restart: always
    command: ["postgres", "-c", "shared_preload_libraries=vector"]

  ollama:
    image: ollama/ollama:latest
    container_name: dho-ollama
    volumes:
      - ${HOME}/dhoOllamaModels:/root/.ollama
    ports:
      - "11434:11434"
    networks:
      - dho-network
    restart: always
    deploy:
      resources:
        reservations:
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - embeddings

  book-processor:
    build:
      context: ../create_embeddings
      dockerfile: Dockerfile
    container_name: dho-book-processor
    env_file:
      - .env
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_MODEL=nomic-embed-text
    depends_on:
      - postgres
      - ollama
    volumes:
      - ./book_input:/app/input:ro
      - ./book_output:/app/output
      - ./book_failed:/app/failed
    networks:
      - dho-network
    restart: "no"
    profiles:
      - book-processing
      - embeddings

networks:
  dho-network:
    driver: bridge